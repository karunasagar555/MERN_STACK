Q) what is React ?

S : A JavaScript library for building fast and Interactive user interfaces.
It is a simple lightweight library, not a complete framework like angular.
It's only responsible for rendering the view, nothing more.


npx create-react-app project_Name -> npx create-react-app reactapp (Project Name should not contain Capital Letters) -> this command Installs packages like react,react-DOM and react-scripts with cra-template.

npm start -> Starts the development server.

npm run build -> Bundles the app into static files for production.

npm test -> Starts the test runner.

npm run eject -> Removes this tool and copies build dependencies, configuration files and scripts into the app directory. If you do this, you canâ€™t go back!, We suggest that you begin by typing, cd reactapp then npm start.

without React : HTML/CSS/JS -> DOM -> render on Browser

NOTE : React uses an algorithm called #Diffing, now what's the use of this algo ? It Identifies changes made in code.

React : code-> Diffing Algo -> Virtual DOM -> DOM -> render on Browser

Q) what does this virtual DOM do ?
s: it identifies the required changes.

Q) what are the advantages of React ?
S:  1) very fast
    2) Easy Event handling (shortcuts)
    3) small libraray compared to angular which is vast -> easy to learn
    4) It manages UI by State - let us assume state as a variable, on State change UI is changed accordingly.


NOTE : In React, DOM is created only for the changes that were made and combines with the former DOM, In HTML/CSS/JS, the whole page is reloaded (In react, only that part is reloaded where the changes were made) once any changes are made and a whole new DOM is created everytime.

About React Componenets - they are Isolated, Reusable, Independent pieces of code. 

Q) how many types of react components ?

s:  1)Functional Components 2) Class Components


Q) what is JSX ?

S:  Javascript + XML - > It allows us to write HTML inside of JS and places them in DOM without using functions like createElement() or appendChild() 

Q) what does Babel do ?

S: babel converts JSX -> JS

HTML/CSS/JS -> Browser (render on Browser)
JSX -> Babel -> JS -> Browser (render on Browser)

Q) React Packages 
S : <script crossorigin src="https://unpkg.com/react@18/umd/react.development.js"></script>
    <script crossorigin src="https://unpkg.com/react-dom@18/umd/react-dom.development.js"></script>
    <script src="https://unpkg.com/babel-standalone@6/babel.min.js"></script>



Q) Named Exports and default exports ??
s: 
Default Exports : Import React from 'react' ; // Default Exports are not kept in curly braces, here React is a    Default Export from 'react' Module.
   
Named Exports : Import React, {Component} from 'react' ; //Named Exports are kept in curly braces, here Component is a Named Export .

Q) what are props ?
S:  they are used to pass data to our components.

Q) what is a controlled Component/controlled Elements ?
S:  controlled Components does not have their own STATE, it gets all the data via PROPS and notifies changes by raising EVENTS.

NOTE : when we are working with controlled Elements/controlled Components, we cannot use NULL or UNDEFINED, otherwise React thinks that we are working with an Uncontrolled Component.


