Q) what is Node ? 
S:  Node is a (open source & cross platform) runtime environment for executing javascript code outside of a browser.
quite often we use node to build backend services also called APIs, these are the services that power our,
client applications like web app running inside of a web browser, mobile app running on a mobile device,
Node is ideal for building highly scalable, data intensive and real time backend services that power our,
client applications. with Node we can build web servers that respond to HTTP REQUESTS.

Q) why Node, what makes Node different? 
s: It is used/great for prototyping and agile development, it is used for building superfast & highly scalable
services, node is an excellent choice for building highly scalable services, it's used in production by large 
companies like paypal, uber, netflix etc, another reason for using node is, in node applications we use javascript
,so our code will be cleaner and consistent, another reason is,it has the largest ecosystem of open-source libraries
that are available to us.

NOTE : Node applications are highly scalable, and this is because of Non-Blocking/Asynchronous nature of Node. 
Node applications are Asynchronous by default. In Node we have a single thread to handle all requests.

NOTE : Every Browser has a javascript engine that takes our javascript code and converts it to code that a 
computer can understand. a Browser provides a run-time environment for javascript code.


- Node is a runtime environment for executing JS code. 

- Essentially, Node is a C++ program that embeds Chrome's v8 engine, the fastest 
JS engine in the world. 

- We use Node to build fast and scalable networking applications. It's a perfect 
choice for building RESTful services. 

- Node applications are single-threaded. That means a single thread is used to 
serve all clients. 

- Node applications are asynchronous or non-blocking by default. That means 
when the application involves I/O operations (eg accessing the file system or the 
network), the thread doesn't wait (or block) for the result of the operation. It is 
released to serve other clients. 

- This architecture makes Node ideal for building I/O-intensive applications. 

- You should avoid using Node for CPU-intensive applications, such as a video 
encoding service. Because while executing these operations, other clients have 
to wait for the single thread to finish its job and be ready to serve them. 

- In Node, we don't have browser environment objects such as window or the 
document object. Instead, we have other objects that are not available in 
browsers, such as objects for working with the file system, network, operating 
system, etc.





Q) what is Express ?
S: Express is a framework for building Restful APIs.

Q) what is MongoDB ?
S: MongoDB is the database management system for storing our Data.
// It is a cross-platform, document oriented, database program, which is classified as a NoSql database.
// It is the most popular NoSql database programs

NOTE : by default MONGODB stores data in this directory /data/db

// Mongod -> Mongo Daemon is a service that runs on the background and listens for connections on a given port, 
which is basically our MongoDB server.


Q) what is a Json Web token ?
s: It is a Json object that is encoded using base 64 url algorithm.
a Json web token is like an Identification card. it has various attributes about the user,
we refer to these attributes as claims.


Q) What is the JSON Web Token structure?
S: In its compact form, JSON Web Tokens consist of three parts separated by dots (.), which are:

Header
Payload
Signature
Therefore, a JWT typically looks like the following.

xxxxx.yyyyy.zzzzz




NOTE : Frameworks are used for building web applications.